1.变量  (可变性   常量    隐藏)
//变量分为可变性  不可变性
//定义变量用let,如果变量没有用mut,那么是不可变的
let  a=1;   //不可变变量
let b:u32=2;
//不允许对不可变变量赋值两次
a=2;  //cannot assign twice to immutable variable

//可变变量声明
let  mut   a=1;  //此时a为可变变量
a=3;

//变量的隐藏性
let a:f32=1;  //后定义的变量会把之前同名变量隐藏掉

//常量  const定义常量
const   constant:u32=10;

//1.rust语言是静态类型语言,也就是说编译时必须知道所有变量的类型
//2.编译器具有自动推导的能力

2.数据类型
  bool                    let is_true:bool=false;  let is_false:bool=true;
  char                    let a:char='a';let b:char='汉';
  数字类型                i8,i16, i32,i64,u8,u16,u32,u64     let c:i8=-11;  let e:f32=10.0;       
  数组                    [Type;size]                let arr: [u32;5] = [1 ,2 ,3 ,4 ,5];      println!("arr[0]={}",arr[0]);     
  自适应类型              println!("max = {}",usize::max_value()); //18446744073709551615
  元组                    let tup:(u32,f64,u32)=(110,11.11,11);     let tup:(i32,f32,char)=(-3,3.69,'好');  let (x,y,z)=tup;  //元组的拆解
  结构体
  枚举


3.函数
  


4.注释



5.控制流